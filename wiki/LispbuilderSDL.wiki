#summary Create interactive games using LISPBUILDER-SDL and Common Lisp

<wiki:toc max_depth="3" />

= Overview =

The goal for LISPBUILDER-SDL is to become a useful resource for the development of games in Lisp.  LISPBUILDER-SDL provides a set of bindings and Lispy abstractions to graphics, sound, physics, character animation and 3D libraries allowing development of interactive application and games in Common Lisp. 

= Introduction =

The LISPBUILDER-SDL core functionality includes window and event loop management, support for 2D bitmap and vector graphics, 2D graphical effects such as rotation, color keying and alpha blending, many graphics drawing primitives such as circles, polygons, squares, Bezier and Cuttmull-Rom curves, BMP image support, playback of WAV samples and streaming music, and bitmap font support. 

The core LISPBUILDER-SDL functionality described above can be enhanced by using [optionalPackages#Optional_Packages optional packages] that provide additional capabilities such as True-type font support, 3D scene management, physics, character animation, support for loading diverse image formats (jpeg, png, tiff, tga, bmp etc.), a sound mixer, sample and music streaming for mp3 and OGG formats, rendering speed ups for many of the graphics primitives, and anti-aliasing support.

= Optional Packages =

  * *lispbuilder-sdl-gfx*: 2D graphical effects such as zooming, rotation, circles, polygons and squares, using [http://www.ferzkopp.net/Software/SDL_gfx-2.0/ SDL_gfx]
  * *lispbuilder-sdl-image*: Support for multople image formats such as PNG and JPG, using [http://www.libsdl.org/projects/SDL_image/ SDL_image]
  * *lispbuilder-sdl-mixer*: Sound mixing, using [http://www.libsdl.org/projects/SDL_mixer/ SDL_mixer] a multi-channel audio mixer library
  * *lispbuilder-sdl-ttf*: True-type font rendering, using [http://www.libsdl.org/projects/SDL_ttf/ SDL_ttf]
  * *lispbuilder-sdl-net*: Networking, using [http://www.libsdl.org/projects/SDL_net/ SDL_net] a cross-platform, blocking network library.

= Example Code =

{{{
(sdl:with-init ()
  (sdl:window 320 240)
  (sdl:draw-surface (load-image "lisp.bmp"))
    (sdl:with-events ()
      (:quit-event () t)
      (:video-expose-event (sdl:update-display))))
}}}

http://lispbuilder.googlecode.com/svn/trunk/lispbuilder-sdl/documentation/sdl-alien.png

= Compatibility =

|| *Lisp Implementation* || *Win32* || *Linux* || *OS X* || *BSD* || *Comments* ||
|| SBCL || Working || Working || NA || Working || Win32 version is single threaded||
|| Lispworks || Working || Working || Working || ?? || ||
|| Allegro || Working || ?? || ?? || ?? || ||
|| CMUCL || NA || No || ?? || ?? || ||
|| CLISP || Working || Working || ?? || ?? || ||
|| Clozure CL || ?? || ?? || ?? || ?? || ||

= Windows: Download & Installation for Newbies =

The LISPBUILDER-SDL package relies on the external [http://www.libsdl.org/ libSDL] dynamic linked library. [http://www.libsdl.org/ libSDL] is downloaded and installed automatically using the procedure describe below.

 # Download & install [http://www.lispworks.com/downloads/index.html Lispworks Personal Edition].
 # Download & install [http://www.weitz.de/starter-pack/ Edi Weitz's Lisp Starter Pack].
 # Download & save [http://www.balooga.com/lispbuilder/config.lisp config.lisp] to the same location as the Lisp Starter Pack. _Note:_ `LispStarterPack.exe` and `config.lisp` must be in the same directory.
 # Run `LispStarterPack.exe` and select the `LISPBUILDER-*` packages. The packages will be downloaded and installed into (in `XP` at least) `My Documents\Lisp Libraries`.

= Windows: Using LISPBUILDER-SDL =

The following instructions apply to the [http://www.weitz.de/starter-pack/#use Edi Weitz's Lisp Starter Pack] above.

 # Start `Lispworks`.
 # Use the `File menu` to `Load...` (and _not_ `Open...`) the file `start.lisp` that was installed in a directory called `"Lisp Libraries"` within `"My Documents"` folder. Lispworks will now compile the libraries libraries.
 # Execute the following in the Lispworks `"Listener"` window when compilation is `DONE`.
  ** `(ASDF:OPERATE 'ASDF:LOAD-OP :LISPBUILDER-SDL-EXAMPLES)`
 # Run one of the examples to verify that the installation was successful;
  ** `(SDL-EXAMPLES:PARTICLES)`

= Download & Installation for OS X, Linux, BSD and Windows Alternate = 

The `LISPBUILDER-SDL` packages rely on several external dynamic linked libraries that are not included as part of the `LISPBUILDER-SDL` distribution. These libraries must be installed prior to loading any of the `LISPBUILDER-SDL` packages. Additional information on the dependencies for a package as well as the download & installation procedures are are [DownloadInstallation described here].

= Using LISPBUILDER-SDL =

= LISPBUILDER-SDL API Reference & Dictionary =